{"./":{"url":"./","title":"Visual Studio Code","keywords":"","body":"Visual Studio Code Visual Studio Code 是一款开源免费的现代化轻量级代码编辑器。 "},"docs/插件清单.html":{"url":"docs/插件清单.html","title":"插件清单","keywords":"","body":"插件清单 CodeSnap Doxygen Documentation Generator Error Lens Image preview Language Pack Material Icon Theme One Dark Pro Path Intellisense Prettier - Code formatter "},"docs/插件清单/CodeSnap.html":{"url":"docs/插件清单/CodeSnap.html","title":"CodeSnap","keywords":"","body":"CodeSnap 打开应用商店，输入 CodeSnap ，安装完成后在代码文件中右键选择，即可进行截图。 "},"docs/插件清单/Doxygen Documentation Generator.html":{"url":"docs/插件清单/Doxygen Documentation Generator.html","title":"Doxygen Documentation Generator","keywords":"","body":"Doxygen Documentation Generator 打开应用商店，输入 Doxygen Documentation Generator ，安装完成后在代码中可以生成文档注释。 "},"docs/插件清单/Error Lens.html":{"url":"docs/插件清单/Error Lens.html","title":"Error Lens","keywords":"","body":"Error Lens 打开应用商店，输入 Error Lens ，安装完成后即可将原来的代码报错显示在对应行并高亮。 "},"docs/插件清单/Image preview.html":{"url":"docs/插件清单/Image preview.html","title":"Image preview","keywords":"","body":"Image preview 打开应用商店，输入 Image preview ，安装完成后即可预览代码中引入的图像。 "},"docs/插件清单/Language Pack.html":{"url":"docs/插件清单/Language Pack.html","title":"Language Pack","keywords":"","body":"Language Pack 打开应用商店，输入 Language Pack ，找到想要安装的语言插件进行安装，安装完成后点击右下角重启 Visual Studio Code ，即可切换到指定的语言。或者，在安装好指定的语言插件之后，使用快捷键 Ctrl + Shift + P 打开命令面板，然后输入 >Configure Display Language 即可配置显示语言。 "},"docs/插件清单/Material Icon Theme.html":{"url":"docs/插件清单/Material Icon Theme.html","title":"Material Icon Theme","keywords":"","body":"Material Icon Theme 打开应用商店，输入 Material Icon Theme ，安装完成后即可切换到指定的图标主题。 "},"docs/插件清单/One Dark Pro.html":{"url":"docs/插件清单/One Dark Pro.html","title":"One Dark Pro","keywords":"","body":"One Dark Pro 打开应用商店，输入 One Dark Pro ，安装完成后即可切换到指定的主题。 "},"docs/插件清单/Path Intellisense.html":{"url":"docs/插件清单/Path Intellisense.html","title":"Path Intellisense","keywords":"","body":"Path Intellisense 打开应用商店，输入 Path Intellisense ，安装完成后在输入文件路径时有智能提示补全。 "},"docs/插件清单/Prettier - Code formatter.html":{"url":"docs/插件清单/Prettier - Code formatter.html","title":"Prettier - Code formatter","keywords":"","body":"Prettier - Code formatter 打开应用商店，输入 Prettier - Code formatter ，安装完成后即可一键格式化代码。 "},"docs/配置文件.html":{"url":"docs/配置文件.html","title":"配置文件","keywords":"","body":"配置文件 打开 Visual Studio Code ，左下角选择设置，然后点击右上角打开设置，添加下面的内容。 { \"editor.fontFamily\": \"Consolas, Microsoft YaHei\", \"files.autoSave\": \"afterDelay\", \"files.autoGuessEncoding\": true, \"workbench.list.smoothScrolling\": true, \"editor.cursorSmoothCaretAnimation\": \"on\", \"editor.smoothScrolling\": true, \"editor.cursorBlinking\": \"smooth\", \"editor.mouseWheelZoom\": true, \"editor.formatOnPaste\": true, \"editor.formatOnType\": true, \"editor.formatOnSave\": true, \"editor.wordWrap\": \"on\", \"editor.guides.bracketPairs\": true, \"editor.suggest.snippetsPreventQuickSuggestions\": false, \"editor.acceptSuggestionOnEnter\": \"smart\", \"editor.suggestSelection\": \"recentlyUsed\", \"window.dialogStyle\": \"custom\", \"debug.showBreakpointsInOverviewRuler\": true } "},"docs/编译系统.html":{"url":"docs/编译系统.html","title":"编译系统","keywords":"","body":"编译系统 C / C++ "},"docs/编译系统/C.html":{"url":"docs/编译系统/C.html","title":"C / C++","keywords":"","body":"C / C++ 将 C 语言添加至环境变量，随后打开应用商店，输入 C/C++ 并安装，安装完成后打开工作区中的 C / C++ 文件，使用快捷键 F5 ，然后选择 C++ (GDB/LLDB) ，选择 gcc.exe build and debug active file ，之后会在当前工作区中的 .vscode 文件夹中自动生成 launch.json 配置文件。 { \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"gcc.exe build and debug active file\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\", \"args\": [], \"stopAtEntry\": false, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"miDebuggerPath\": \"当前环境中 gdb.exe 的执行路径\", \"setupCommands\": [ { \"description\": \"为 gdb 启用整齐打印\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ], \"preLaunchTask\": \"gcc.exe build active file\" } ] } 编辑好 launch.json 配置文件后保存，返回到工作区中的 C / C++ 文件，重新使用快捷键 F5 ， Visual Studio Code 可能会弹出错误窗口，此时选择 C/C++: gcc.exe build active file ，会在当前工作区中的 .vscode 文件夹中自动生成 tasks.json 配置文件。 { \"version\": \"2.0.0\", \"tasks\": [ { \"type\": \"shell\", \"label\": \"gcc.exe build active file\", \"command\": \"当前环境中 gcc.exe 的执行路径\", \"args\": [ \"-g\", \"${file}\", \"-o\", \"${fileDirname}\\\\${fileBasenameNoExtension}.exe\" ], \"options\": { \"cwd\": \"当前环境中 C 的执行路径\" }, \"problemMatcher\": [ \"$gcc\" ], \"group\": \"build\" } ] } 编辑好 tasks.json 配置文件后保存，再次返回到工作区中的 C / C++ 文件，此时再次使用快捷键 F5 即可看到运行结果。 "}}